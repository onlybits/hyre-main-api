<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Hyre.Modules.Jobs.Infrastructure</name>
    </assembly>
    <members>
        <member name="T:Hyre.Modules.Jobs.Infrastructure.Configuration.CandidateConfiguration">
            <summary>
                This class configures the mapping of the
                <see cref="T:Hyre.Modules.Jobs.Core.Entities.Candidate"/>
                entity to the database.
            </summary>
        </member>
        <member name="T:Hyre.Modules.Jobs.Infrastructure.Configuration.JobOpportunityConfiguration">
            <summary>
                This class configures the mapping of the
                <see cref="T:Hyre.Modules.Jobs.Core.Entities.JobOpportunity"/>
                entity to the database.
            </summary>
        </member>
        <member name="T:Hyre.Modules.Jobs.Infrastructure.Extensions">
            <summary>
                This class contains the extension methods for the infrastructure layer.
            </summary>
        </member>
        <member name="M:Hyre.Modules.Jobs.Infrastructure.Extensions.AddInfrastructure(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                This method adds the infrastructure layer to the service collection.
            </summary>
            <param name="services">The service collection.</param>
            <returns>It will return the service collection.</returns>
        </member>
        <member name="T:Hyre.Modules.Jobs.Infrastructure.JobsRepositoryContext">
            <summary>
                Represents the database context for the jobs repository.
            </summary>
        </member>
        <member name="M:Hyre.Modules.Jobs.Infrastructure.JobsRepositoryContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Hyre.Modules.Jobs.Infrastructure.JobsRepositoryContext})">
            <summary>
                Initializes a new instance of the
                <see cref="T:Hyre.Modules.Jobs.Infrastructure.JobsRepositoryContext"/>
                class.
            </summary>
            <param name="options">The database context options.</param>
        </member>
        <member name="P:Hyre.Modules.Jobs.Infrastructure.JobsRepositoryContext.Candidates">
            <summary>
                Gets or sets the candidates.
            </summary>
        </member>
        <member name="P:Hyre.Modules.Jobs.Infrastructure.JobsRepositoryContext.JobOpportunities">
            <summary>
                Gets or sets the job opportunities.
            </summary>
        </member>
        <member name="M:Hyre.Modules.Jobs.Infrastructure.JobsRepositoryContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
                Override this method to further configure the model that was discovered by convention from the entity
                types.
            </summary>
            <param name="modelBuilder">
                The builder being used to construct the model for this context.
            </param>
        </member>
        <member name="T:Hyre.Modules.Jobs.Infrastructure.JobsRepositoryManager">
            <summary>
                This class is responsible for managing the all the repositories for the jobs module.
            </summary>
            <inheritdoc cref="T:Hyre.Modules.Jobs.Core.Repositories.IJobsRepositoryManager"/>
        </member>
        <member name="M:Hyre.Modules.Jobs.Infrastructure.JobsRepositoryManager.#ctor(Hyre.Modules.Jobs.Infrastructure.JobsRepositoryContext,MassTransit.IPublishEndpoint,Hyre.Shared.Abstractions.Logging.ILoggerManager)">
            <summary>
                Initializes a new instance of the
                <see cref="T:Hyre.Modules.Jobs.Infrastructure.JobsRepositoryManager"/>
                class.
            </summary>
            <param name="context">The jobs repository context.</param>
            <param name="publishEndpoint">The publish endpoint for the message broker.</param>
            <param name="logger">The logger manager.</param>
        </member>
        <member name="M:Hyre.Modules.Jobs.Infrastructure.JobsRepositoryManager.PublishEvents(System.Threading.CancellationToken)">
            <summary>
                This method publishes the domain events to the message broker.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="T:Hyre.Modules.Jobs.Infrastructure.Persistence.CandidateRepository">
            <summary>
                This is the repository for the
                <see cref="T:Hyre.Modules.Jobs.Core.Entities.Candidate"/>
                entity.
            </summary>
            <inheritdoc cref="T:Hyre.Modules.Jobs.Core.Repositories.ICandidateRepository"/>
        </member>
        <member name="M:Hyre.Modules.Jobs.Infrastructure.Persistence.CandidateRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                Initializes a new instance of the
                <see cref="T:Hyre.Modules.Jobs.Infrastructure.Persistence.CandidateRepository"/>
                class.
            </summary>
            <param name="context">The database context.</param>
        </member>
        <member name="M:Hyre.Modules.Jobs.Infrastructure.Persistence.CandidateRepository.FindByEmailAsync(Hyre.Modules.Jobs.Core.ValueObjects.Candidates.CandidateEmail,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                This method is responsible for finding a candidate by its email.
            </summary>
            <param name="email">The candidate email.</param>
            <param name="trackChanges">Should EF Core keep track of changes in the candidate entity.</param>
            <param name="cancellationToken">The cancellation token, used to cancel the operation.</param>
            <returns>Returns the candidate found, or null if not found.</returns>
        </member>
        <member name="M:Hyre.Modules.Jobs.Infrastructure.Persistence.CandidateRepository.Create(Hyre.Modules.Jobs.Core.Entities.Candidate)">
            <summary>
                This method is responsible for creating a new candidate.
            </summary>
            <param name="candidate">The candidate to be created.</param>
        </member>
        <member name="M:Hyre.Modules.Jobs.Infrastructure.Persistence.CandidateRepository.Update(Hyre.Modules.Jobs.Core.Entities.Candidate)">
            <summary>
                This method is responsible for updating a candidate.
            </summary>
            <param name="candidate">The candidate to be updated.</param>
        </member>
        <member name="M:Hyre.Modules.Jobs.Infrastructure.Persistence.CandidateRepository.Delete(Hyre.Modules.Jobs.Core.Entities.Candidate)">
            <summary>
                This method is responsible for deleting a candidate.
            </summary>
            <param name="candidate">The candidate to be deleted.</param>
        </member>
        <member name="M:Hyre.Modules.Jobs.Infrastructure.Persistence.CandidateRepository.FindByIdAsync(Hyre.Modules.Jobs.Core.ValueObjects.Candidates.CandidateId,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                This method is responsible for finding a candidate by its id.
            </summary>
            <param name="candidateId">The candidate id.</param>
            <param name="trackChanges">Should EF Core keep track of changes in the candidate entity.</param>
            <param name="cancellationToken">The cancellation token, used to cancel the operation.</param>
            <returns>Returns the candidate found, or null if not found.</returns>
        </member>
        <member name="M:Hyre.Modules.Jobs.Infrastructure.Persistence.CandidateRepository.ListAsync(Hyre.Modules.Jobs.Core.Requests.CandidateParameters,System.Threading.CancellationToken)">
            <summary>
                This method is responsible for listing candidates.
            </summary>
            <param name="parameters">The parameters to be used in the listing.</param>
            <param name="cancellationToken">The cancellation token, used to cancel the operation.</param>
            <returns>Returns a paged list of candidates.</returns>
        </member>
        <member name="M:Hyre.Modules.Jobs.Infrastructure.Persistence.CandidateRepository.ExistsAsync(Hyre.Modules.Jobs.Core.ValueObjects.Candidates.CandidateEmail,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                This method is responsible for checking if a candidate exists by arguments.
            </summary>
            <param name="email">The candidate email.</param>
            <param name="trackChanges">Should EF Core keep track of changes in the candidate entity.</param>
            <param name="cancellationToken">The cancellation token, used to cancel the operation.</param>
            <returns>Returns true if the candidate exists, otherwise false.</returns>
        </member>
        <member name="T:Hyre.Modules.Jobs.Infrastructure.Persistence.JobOpportunityRepository">
            <summary>
                This is the repository for the
                <see cref="T:Hyre.Modules.Jobs.Core.Entities.JobOpportunity"/>
                entity.
            </summary>
            <inheritdoc cref="T:Hyre.Modules.Jobs.Core.Repositories.IJobOpportunityRepository"/>
        </member>
        <member name="M:Hyre.Modules.Jobs.Infrastructure.Persistence.JobOpportunityRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                Initializes a new instance of the
                <see cref="T:Hyre.Modules.Jobs.Infrastructure.Persistence.JobOpportunityRepository"/>
                class.
            </summary>
            <param name="context">The database context.</param>
        </member>
        <member name="M:Hyre.Modules.Jobs.Infrastructure.Persistence.JobOpportunityRepository.ListAsync(Hyre.Modules.Jobs.Core.Requests.JobOpportunityParameters,System.Threading.CancellationToken)">
            <summary>
                This method is responsible for listing job opportunities.
            </summary>
            <param name="parameters">The parameters to be used in the listing.</param>
            <param name="cancellationToken">The cancellation token, used to cancel the operation.</param>
            <returns>It will return a paged list of job opportunities.</returns>
        </member>
        <member name="M:Hyre.Modules.Jobs.Infrastructure.Persistence.JobOpportunityRepository.FindByIdAsync(Hyre.Modules.Jobs.Core.ValueObjects.JobOpportunities.JobOpportunityId,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                This method is responsible for finding a job opportunity by its id.
            </summary>
            <param name="id">The job opportunity id.</param>
            <param name="trackChanges">Should EF keep track of the changes.</param>
            <param name="includeCandidates">Should the candidates be included in the result.</param>
            <param name="cancellationToken">The cancellation token, used to cancel the operation.</param>
            <returns>It will return the job opportunity found.</returns>
        </member>
        <member name="M:Hyre.Modules.Jobs.Infrastructure.Persistence.JobOpportunityRepository.Create(Hyre.Modules.Jobs.Core.Entities.JobOpportunity)">
            <summary>
                This method is responsible for creating a new job opportunity.
            </summary>
            <param name="jobOpportunity">The job opportunity to be created.</param>
        </member>
        <member name="M:Hyre.Modules.Jobs.Infrastructure.Persistence.JobOpportunityRepository.Update(Hyre.Modules.Jobs.Core.Entities.JobOpportunity)">
            <summary>
                This method is responsible for updating a job opportunity.
            </summary>
            <param name="jobOpportunity">The job opportunity to be updated.</param>
        </member>
        <member name="M:Hyre.Modules.Jobs.Infrastructure.Persistence.JobOpportunityRepository.Delete(Hyre.Modules.Jobs.Core.Entities.JobOpportunity)">
            <summary>
                This method is responsible for deleting a job opportunity.
            </summary>
            <param name="jobOpportunity">The job opportunity to be deleted.</param>
        </member>
        <member name="M:Hyre.Modules.Jobs.Infrastructure.Persistence.JobOpportunityRepository.ExistsAsync(Hyre.Modules.Jobs.Core.ValueObjects.JobOpportunities.JobOpportunityId,System.Threading.CancellationToken)">
            <summary>
                This method is responsible for checking if a job opportunity exists in the database.
            </summary>
            <param name="id">The job opportunity id.</param>
            <param name="cancellationToken">The cancellation token, used to cancel the operation.</param>
            <returns>Returns true if the job opportunity exists, otherwise false.</returns>
        </member>
    </members>
</doc>
